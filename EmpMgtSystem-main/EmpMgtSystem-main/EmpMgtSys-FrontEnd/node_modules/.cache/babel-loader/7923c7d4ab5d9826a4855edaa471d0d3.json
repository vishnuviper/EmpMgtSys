{"ast":null,"code":"var _jsxFileName = \"C:\\\\r\\\\react-hooks-frontend\\\\src\\\\components\\\\AddEmployeeComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddEmployeeComponent = () => {\n  _s();\n  const [employeeFirstName, setEmployeeFirstName] = useState('');\n  const [employeeCode, setEmployeeCode] = useState('');\n  const [employeeLastName, setEmployeeLastName] = useState('');\n  const [emailId, setEmailId] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState('');\n  const [gender, setGender] = useState('');\n  const [age, setAge] = useState('');\n  const [position, setPosition] = useState('');\n  const [currentAddressLine1, setCurrentAddressLine1] = useState('');\n  const [currentAddressLine2, setCurrentAddressLine2] = useState('');\n  const [currentCity, setCurrentCity] = useState('');\n  const [currentPincode, setCurrentPincode] = useState('');\n  const [permanentAddressLine1, setPermanentAddressLine1] = useState('');\n  const [permanentAddressLine2, setPermanentAddressLine2] = useState('');\n  const [permanentCity, setPermanentCity] = useState('');\n  const [permanentPincode, setPermanentPincode] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [emergencyContactName, setEmergencyContactName] = useState('');\n  const [emergencyMobile, setEmergencyMobile] = useState('');\n  const [companyMail, setCompanyMail] = useState('');\n  const [officePhoneNo, setOfficePhoneNo] = useState('');\n  const [officeCity, setOfficeCity] = useState('');\n  const [reportingManagerMail, setReportingManagerMail] = useState('');\n  const [hrMail, setHrMail] = useState('');\n  const [previousCompany, setPreviousCompany] = useState('');\n  const [previousCompanyJoinDate, setPreviousCompanyJoinDate] = useState('');\n  const [previousCompanyEndDate, setPreviousCompanyEndDate] = useState('');\n  const [projectCode, setProjectCode] = useState('');\n  const [projectStartDate, setProjectStartDate] = useState('');\n  const [projectEndDate, setProjectEndDate] = useState('');\n  const [panCardNumber, setPanCardNumber] = useState('');\n  const [aadharCardNumber, setAadharCardNumber] = useState('');\n  const [bankName, setBankName] = useState('');\n  const [ifscCode, setIfscCode] = useState('');\n  const [bankBranch, setBankBranch] = useState('');\n  const [basicSalary, setBasicSalary] = useState('');\n  const [bonus, setBonus] = useState('');\n  const [houseRentAllowance, setHouseRentAllowance] = useState('');\n  const [medicalAllowance, setMedicalAllowance] = useState('');\n  const [travelAllowance, setTravelAllowance] = useState('');\n  const [pf, setPf] = useState('');\n  const [tax, setTax] = useState('');\n  const [ctc, setCtc] = useState('');\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const validate = () => {\n    let formErrors = {};\n    if (!employeeFirstName) formErrors.employeeFirstName = 'First name is required';\n    if (!employeeLastName) formErrors.employeeLastName = 'Last name is required';\n    if (!employeeCode) formErrors.employeeCode = 'Employee code is required';\n    if (!emailId) {\n      formErrors.emailId = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(emailId)) {\n      formErrors.emailId = 'Email is invalid';\n    }\n    if (!dateOfBirth) formErrors.dateOfBirth = 'Date of Birth is required';\n    if (!mobile || !/^\\d{10}$/.test(mobile)) {\n      formErrors.mobile = 'Valid 10-digit mobile number is required';\n    }\n    if (!age || isNaN(age)) formErrors.age = 'Valid age is required';\n    if (!currentPincode || isNaN(currentPincode)) formErrors.currentPincode = 'Current Pincode must be a number';\n    if (!permanentPincode || isNaN(permanentPincode)) formErrors.permanentPincode = 'Permanent Pincode must be a number';\n    if (!panCardNumber) formErrors.panCardNumber = 'PAN card number is required';\n    if (!aadharCardNumber || aadharCardNumber.length !== 12) {\n      formErrors.aadharCardNumber = 'Valid 12-digit Aadhar number is required';\n    }\n    if (!basicSalary || isNaN(basicSalary)) formErrors.basicSalary = 'Basic salary must be a valid number';\n    if (!ctc || isNaN(ctc)) formErrors.ctc = 'CTC must be a valid number';\n    setErrors(formErrors);\n    return Object.keys(formErrors).length === 0;\n  };\n  const saveOrUpdateEmployee = e => {\n    e.preventDefault();\n    if (!validate()) {\n      return;\n    }\n    const employee = {\n      employeeFirstName,\n      employeeCode,\n      employeeLastName,\n      emailId,\n      dateOfBirth,\n      gender,\n      age,\n      position,\n      currentAddressLine1,\n      currentAddressLine2,\n      currentCity,\n      currentPincode,\n      permanentAddressLine1,\n      permanentAddressLine2,\n      permanentCity,\n      permanentPincode,\n      mobile,\n      emergencyContactName,\n      emergencyMobile,\n      companyMail,\n      officePhoneNo,\n      officeCity,\n      reportingManagerMail,\n      hrMail,\n      previousCompany,\n      previousCompanyJoinDate,\n      previousCompanyEndDate,\n      projectCode,\n      projectStartDate,\n      projectEndDate,\n      panCardNumber,\n      aadharCardNumber,\n      bankName,\n      ifscCode,\n      bankBranch,\n      basicSalary,\n      bonus,\n      houseRentAllowance,\n      medicalAllowance,\n      travelAllowance,\n      pf,\n      tax,\n      ctc\n    };\n    if (id) {\n      EmployeeService.updateEmployee(id, employee).then(() => {\n        history.push('/employees');\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      EmployeeService.createEmployee(employee).then(() => {\n        history.push('/employees');\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      EmployeeService.getEmployeeById(id).then(response => {\n        const employee = response.data;\n        setEmployeeFirstName(employee.employeeFirstName);\n        setEmployeeLastName(employee.employeeLastName);\n        setEmployeeCode(employee.employeeCode);\n        setEmailId(employee.emailId);\n        setDateOfBirth(employee.dateOfBirth);\n        setGender(employee.gender);\n        setAge(employee.age);\n        setPosition(employee.position);\n        setCurrentAddressLine1(employee.currentAddressLine1);\n        setCurrentAddressLine2(employee.currentAddressLine2);\n        setCurrentCity(employee.currentCity);\n        setCurrentPincode(employee.currentPincode);\n        setPermanentAddressLine1(employee.permanentAddressLine1);\n        setPermanentAddressLine2(employee.permanentAddressLine2);\n        setPermanentCity(employee.permanentCity);\n        setPermanentPincode(employee.permanentPincode);\n        setMobile(employee.mobile);\n        setEmergencyContactName(employee.emergencyContactName);\n        setEmergencyMobile(employee.emergencyMobile);\n        setCompanyMail(employee.companyMail);\n        setOfficePhoneNo(employee.officePhoneNo);\n        setOfficeCity(employee.officeCity);\n        setReportingManagerMail(employee.reportingManagerMail);\n        setHrMail(employee.hrMail);\n        setPreviousCompany(employee.previousCompany);\n        setPreviousCompanyJoinDate(employee.previousCompanyJoinDate);\n        setPreviousCompanyEndDate(employee.previousCompanyEndDate);\n        setProjectCode(employee.projectCode);\n        setProjectStartDate(employee.projectStartDate);\n        setProjectEndDate(employee.projectEndDate);\n        setPanCardNumber(employee.panCardNumber);\n        setAadharCardNumber(employee.aadharCardNumber);\n        setBankName(employee.bankName);\n        setIfscCode(employee.ifscCode);\n        setBankBranch(employee.bankBranch);\n        setBasicSalary(employee.basicSalary);\n        setBonus(employee.bonus);\n        setHouseRentAllowance(employee.houseRentAllowance);\n        setMedicalAllowance(employee.medicalAllowance);\n        setTravelAllowance(employee.travelAllowance);\n        setPf(employee.pf);\n        setTax(employee.tax);\n        setCtc(employee.ctc);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [id]);\n  const title = () => {\n    return id ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Update Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 72\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [title(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Personal Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"First Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter first name\",\n                  name: \"employeeFirstName\",\n                  className: \"form-control\",\n                  value: employeeFirstName,\n                  onChange: e => setEmployeeFirstName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this), errors.employeeFirstName && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-danger\",\n                  children: errors.employeeFirstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: saveOrUpdateEmployee,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/employees\",\n                className: \"btn btn-danger\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n_s(AddEmployeeComponent, \"36VagQL8SO8QroU3yMUncDpZIO8=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = AddEmployeeComponent;\nexport default AddEmployeeComponent;\nvar _c;\n$RefreshReg$(_c, \"AddEmployeeComponent\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","useParams","EmployeeService","jsxDEV","_jsxDEV","AddEmployeeComponent","_s","employeeFirstName","setEmployeeFirstName","employeeCode","setEmployeeCode","employeeLastName","setEmployeeLastName","emailId","setEmailId","dateOfBirth","setDateOfBirth","gender","setGender","age","setAge","position","setPosition","currentAddressLine1","setCurrentAddressLine1","currentAddressLine2","setCurrentAddressLine2","currentCity","setCurrentCity","currentPincode","setCurrentPincode","permanentAddressLine1","setPermanentAddressLine1","permanentAddressLine2","setPermanentAddressLine2","permanentCity","setPermanentCity","permanentPincode","setPermanentPincode","mobile","setMobile","emergencyContactName","setEmergencyContactName","emergencyMobile","setEmergencyMobile","companyMail","setCompanyMail","officePhoneNo","setOfficePhoneNo","officeCity","setOfficeCity","reportingManagerMail","setReportingManagerMail","hrMail","setHrMail","previousCompany","setPreviousCompany","previousCompanyJoinDate","setPreviousCompanyJoinDate","previousCompanyEndDate","setPreviousCompanyEndDate","projectCode","setProjectCode","projectStartDate","setProjectStartDate","projectEndDate","setProjectEndDate","panCardNumber","setPanCardNumber","aadharCardNumber","setAadharCardNumber","bankName","setBankName","ifscCode","setIfscCode","bankBranch","setBankBranch","basicSalary","setBasicSalary","bonus","setBonus","houseRentAllowance","setHouseRentAllowance","medicalAllowance","setMedicalAllowance","travelAllowance","setTravelAllowance","pf","setPf","tax","setTax","ctc","setCtc","errors","setErrors","history","id","validate","formErrors","test","isNaN","length","Object","keys","saveOrUpdateEmployee","e","preventDefault","employee","updateEmployee","then","push","catch","error","console","log","createEmployee","getEmployeeById","response","data","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","value","onChange","target","onClick","to","_c","$RefreshReg$"],"sources":["C:/r/react-hooks-frontend/src/components/AddEmployeeComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\n\nconst AddEmployeeComponent = () => {\n\n    const [employeeFirstName, setEmployeeFirstName] = useState('');\n    const [employeeCode, setEmployeeCode] = useState('');\n    const [employeeLastName, setEmployeeLastName] = useState('');\n    const [emailId, setEmailId] = useState('');\n\n    const [dateOfBirth, setDateOfBirth] = useState('');\n    const [gender, setGender] = useState('');\n    const [age, setAge] = useState('');\n    const [position, setPosition] = useState('');\n    const [currentAddressLine1, setCurrentAddressLine1] = useState('');\n    const [currentAddressLine2, setCurrentAddressLine2] = useState('');\n    const [currentCity, setCurrentCity] = useState('');\n    const [currentPincode, setCurrentPincode] = useState('');\n    const [permanentAddressLine1, setPermanentAddressLine1] = useState('');\n    const [permanentAddressLine2, setPermanentAddressLine2] = useState('');\n    const [permanentCity, setPermanentCity] = useState('');\n    const [permanentPincode, setPermanentPincode] = useState('');\n    const [mobile, setMobile] = useState('');\n    const [emergencyContactName, setEmergencyContactName] = useState('');\n    const [emergencyMobile, setEmergencyMobile] = useState('');\n    const [companyMail, setCompanyMail] = useState('');\n    const [officePhoneNo, setOfficePhoneNo] = useState('');\n    const [officeCity, setOfficeCity] = useState('');\n    const [reportingManagerMail, setReportingManagerMail] = useState('');\n    const [hrMail, setHrMail] = useState('');\n    const [previousCompany, setPreviousCompany] = useState('');\n    const [previousCompanyJoinDate, setPreviousCompanyJoinDate] = useState('');\n    const [previousCompanyEndDate, setPreviousCompanyEndDate] = useState('');\n    const [projectCode, setProjectCode] = useState('');\n    const [projectStartDate, setProjectStartDate] = useState('');\n    const [projectEndDate, setProjectEndDate] = useState('');\n\n    const [panCardNumber, setPanCardNumber] = useState('');\n    const [aadharCardNumber, setAadharCardNumber] = useState('');\n    const [bankName, setBankName] = useState('');\n    const [ifscCode, setIfscCode] = useState('');\n    const [bankBranch, setBankBranch] = useState('');\n    const [basicSalary, setBasicSalary] = useState('');\n    const [bonus, setBonus] = useState('');\n    const [houseRentAllowance, setHouseRentAllowance] = useState('');\n    const [medicalAllowance, setMedicalAllowance] = useState('');\n    const [travelAllowance, setTravelAllowance] = useState('');\n    const [pf, setPf] = useState('');\n    const [tax, setTax] = useState('');\n    const [ctc, setCtc] = useState('');\n\n    const [errors, setErrors] = useState({});\n    const history = useHistory();\n    const { id } = useParams();\n\n    const validate = () => {\n        let formErrors = {};\n        if (!employeeFirstName) formErrors.employeeFirstName = 'First name is required';\n        if (!employeeLastName) formErrors.employeeLastName = 'Last name is required';\n        if (!employeeCode) formErrors.employeeCode = 'Employee code is required';\n        if (!emailId) {\n            formErrors.emailId = 'Email is required';\n        } else if (!/\\S+@\\S+\\.\\S+/.test(emailId)) {\n            formErrors.emailId = 'Email is invalid';\n        }\n        if (!dateOfBirth) formErrors.dateOfBirth = 'Date of Birth is required';\n        if (!mobile || !/^\\d{10}$/.test(mobile)) {\n            formErrors.mobile = 'Valid 10-digit mobile number is required';\n        }\n        if (!age || isNaN(age)) formErrors.age = 'Valid age is required';\n        if (!currentPincode || isNaN(currentPincode)) formErrors.currentPincode = 'Current Pincode must be a number';\n        if (!permanentPincode || isNaN(permanentPincode)) formErrors.permanentPincode = 'Permanent Pincode must be a number';\n        if (!panCardNumber) formErrors.panCardNumber = 'PAN card number is required';\n        if (!aadharCardNumber || aadharCardNumber.length !== 12) {\n            formErrors.aadharCardNumber = 'Valid 12-digit Aadhar number is required';\n        }\n        if (!basicSalary || isNaN(basicSalary)) formErrors.basicSalary = 'Basic salary must be a valid number';\n        if (!ctc || isNaN(ctc)) formErrors.ctc = 'CTC must be a valid number';\n\n        setErrors(formErrors);\n        return Object.keys(formErrors).length === 0;\n    };\n\n    const saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n\n        if (!validate()) {\n            return;\n        }\n\n        const employee = {\n            employeeFirstName, employeeCode, employeeLastName, emailId, dateOfBirth, gender,\n            age, position, currentAddressLine1, currentAddressLine2, currentCity, currentPincode,\n            permanentAddressLine1, permanentAddressLine2, permanentCity, permanentPincode, mobile,\n            emergencyContactName, emergencyMobile, companyMail, officePhoneNo, officeCity,\n            reportingManagerMail, hrMail, previousCompany, previousCompanyJoinDate, previousCompanyEndDate,\n            projectCode, projectStartDate, projectEndDate, panCardNumber, aadharCardNumber, bankName,\n            ifscCode, bankBranch, basicSalary, bonus, houseRentAllowance, medicalAllowance, travelAllowance,\n            pf, tax, ctc\n        };\n\n        if (id) {\n            EmployeeService.updateEmployee(id, employee).then(() => {\n                history.push('/employees');\n            }).catch(error => {\n                console.log(error);\n            });\n        } else {\n            EmployeeService.createEmployee(employee).then(() => {\n                history.push('/employees');\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (id) {\n            EmployeeService.getEmployeeById(id).then(response => {\n                const employee = response.data;\n                setEmployeeFirstName(employee.employeeFirstName);\n                setEmployeeLastName(employee.employeeLastName);\n                setEmployeeCode(employee.employeeCode);\n                setEmailId(employee.emailId);\n                setDateOfBirth(employee.dateOfBirth);\n                setGender(employee.gender);\n                setAge(employee.age);\n                setPosition(employee.position);\n                setCurrentAddressLine1(employee.currentAddressLine1);\n                setCurrentAddressLine2(employee.currentAddressLine2);\n                setCurrentCity(employee.currentCity);\n                setCurrentPincode(employee.currentPincode);\n                setPermanentAddressLine1(employee.permanentAddressLine1);\n                setPermanentAddressLine2(employee.permanentAddressLine2);\n                setPermanentCity(employee.permanentCity);\n                setPermanentPincode(employee.permanentPincode);\n                setMobile(employee.mobile);\n                setEmergencyContactName(employee.emergencyContactName);\n                setEmergencyMobile(employee.emergencyMobile);\n                setCompanyMail(employee.companyMail);\n                setOfficePhoneNo(employee.officePhoneNo);\n                setOfficeCity(employee.officeCity);\n                setReportingManagerMail(employee.reportingManagerMail);\n                setHrMail(employee.hrMail);\n                setPreviousCompany(employee.previousCompany);\n                setPreviousCompanyJoinDate(employee.previousCompanyJoinDate);\n                setPreviousCompanyEndDate(employee.previousCompanyEndDate);\n                setProjectCode(employee.projectCode);\n                setProjectStartDate(employee.projectStartDate);\n                setProjectEndDate(employee.projectEndDate);\n                setPanCardNumber(employee.panCardNumber);\n                setAadharCardNumber(employee.aadharCardNumber);\n                setBankName(employee.bankName);\n                setIfscCode(employee.ifscCode);\n                setBankBranch(employee.bankBranch);\n                setBasicSalary(employee.basicSalary);\n                setBonus(employee.bonus);\n                setHouseRentAllowance(employee.houseRentAllowance);\n                setMedicalAllowance(employee.medicalAllowance);\n                setTravelAllowance(employee.travelAllowance);\n                setPf(employee.pf);\n                setTax(employee.tax);\n                setCtc(employee.ctc);\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n    }, [id]);\n\n    const title = () => {\n        return id ? <h2 className=\"text-center\">Update Employee</h2> : <h2 className=\"text-center\">Add Employee</h2>;\n    };\n\n    return (\n        <div>\n            <br /><br />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                        {title()}\n                        <div className=\"card-body\">\n                            <form>\n                                <h3>Personal Details:</h3>\n                                <div className=\"form-group mb-2\">\n                                    <label className=\"form-label\">First Name:</label>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter first name\"\n                                        name=\"employeeFirstName\"\n                                        className=\"form-control\"\n                                        value={employeeFirstName}\n                                        onChange={(e) => setEmployeeFirstName(e.target.value)}\n                                    />\n                                    {errors.employeeFirstName && <div className=\"text-danger\">{errors.employeeFirstName}</div>}\n                                </div>\n                                \n                                {/* Add similar input fields for all other attributes with validation messages */}\n\n\n\n                                \n                                <button className=\"btn btn-success\" onClick={saveOrUpdateEmployee}>Submit</button>\n                                <Link to=\"/employees\" className=\"btn btn-danger\">Cancel</Link>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AddEmployeeComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AAC9D,OAAOC,eAAe,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE/B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,GAAG,EAAEC,MAAM,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC4B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACoC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACsC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC0C,MAAM,EAAEC,SAAS,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC4C,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAAC8C,eAAe,EAAEC,kBAAkB,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgD,WAAW,EAAEC,cAAc,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkD,aAAa,EAAEC,gBAAgB,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoD,UAAU,EAAEC,aAAa,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACwD,MAAM,EAAEC,SAAS,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC0D,eAAe,EAAEC,kBAAkB,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4D,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC1E,MAAM,CAAC8D,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAACgE,WAAW,EAAEC,cAAc,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACoE,cAAc,EAAEC,iBAAiB,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAM,CAACsE,aAAa,EAAEC,gBAAgB,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzE,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC0E,QAAQ,EAAEC,WAAW,CAAC,GAAG3E,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4E,QAAQ,EAAEC,WAAW,CAAC,GAAG7E,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8E,UAAU,EAAEC,aAAa,CAAC,GAAG/E,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgF,WAAW,EAAEC,cAAc,CAAC,GAAGjF,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkF,KAAK,EAAEC,QAAQ,CAAC,GAAGnF,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoF,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrF,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACsF,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvF,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACwF,eAAe,EAAEC,kBAAkB,CAAC,GAAGzF,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0F,EAAE,EAAEC,KAAK,CAAC,GAAG3F,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAAC4F,GAAG,EAAEC,MAAM,CAAC,GAAG7F,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAAC8F,GAAG,EAAEC,MAAM,CAAC,GAAG/F,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAM,CAACgG,MAAM,EAAEC,SAAS,CAAC,GAAGjG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMkG,OAAO,GAAG/F,UAAU,CAAC,CAAC;EAC5B,MAAM;IAAEgG;EAAG,CAAC,GAAG/F,SAAS,CAAC,CAAC;EAE1B,MAAMgG,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAIC,UAAU,GAAG,CAAC,CAAC;IACnB,IAAI,CAAC3F,iBAAiB,EAAE2F,UAAU,CAAC3F,iBAAiB,GAAG,wBAAwB;IAC/E,IAAI,CAACI,gBAAgB,EAAEuF,UAAU,CAACvF,gBAAgB,GAAG,uBAAuB;IAC5E,IAAI,CAACF,YAAY,EAAEyF,UAAU,CAACzF,YAAY,GAAG,2BAA2B;IACxE,IAAI,CAACI,OAAO,EAAE;MACVqF,UAAU,CAACrF,OAAO,GAAG,mBAAmB;IAC5C,CAAC,MAAM,IAAI,CAAC,cAAc,CAACsF,IAAI,CAACtF,OAAO,CAAC,EAAE;MACtCqF,UAAU,CAACrF,OAAO,GAAG,kBAAkB;IAC3C;IACA,IAAI,CAACE,WAAW,EAAEmF,UAAU,CAACnF,WAAW,GAAG,2BAA2B;IACtE,IAAI,CAACwB,MAAM,IAAI,CAAC,UAAU,CAAC4D,IAAI,CAAC5D,MAAM,CAAC,EAAE;MACrC2D,UAAU,CAAC3D,MAAM,GAAG,0CAA0C;IAClE;IACA,IAAI,CAACpB,GAAG,IAAIiF,KAAK,CAACjF,GAAG,CAAC,EAAE+E,UAAU,CAAC/E,GAAG,GAAG,uBAAuB;IAChE,IAAI,CAACU,cAAc,IAAIuE,KAAK,CAACvE,cAAc,CAAC,EAAEqE,UAAU,CAACrE,cAAc,GAAG,kCAAkC;IAC5G,IAAI,CAACQ,gBAAgB,IAAI+D,KAAK,CAAC/D,gBAAgB,CAAC,EAAE6D,UAAU,CAAC7D,gBAAgB,GAAG,oCAAoC;IACpH,IAAI,CAAC8B,aAAa,EAAE+B,UAAU,CAAC/B,aAAa,GAAG,6BAA6B;IAC5E,IAAI,CAACE,gBAAgB,IAAIA,gBAAgB,CAACgC,MAAM,KAAK,EAAE,EAAE;MACrDH,UAAU,CAAC7B,gBAAgB,GAAG,0CAA0C;IAC5E;IACA,IAAI,CAACQ,WAAW,IAAIuB,KAAK,CAACvB,WAAW,CAAC,EAAEqB,UAAU,CAACrB,WAAW,GAAG,qCAAqC;IACtG,IAAI,CAACc,GAAG,IAAIS,KAAK,CAACT,GAAG,CAAC,EAAEO,UAAU,CAACP,GAAG,GAAG,4BAA4B;IAErEG,SAAS,CAACI,UAAU,CAAC;IACrB,OAAOI,MAAM,CAACC,IAAI,CAACL,UAAU,CAAC,CAACG,MAAM,KAAK,CAAC;EAC/C,CAAC;EAED,MAAMG,oBAAoB,GAAIC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACT,QAAQ,CAAC,CAAC,EAAE;MACb;IACJ;IAEA,MAAMU,QAAQ,GAAG;MACbpG,iBAAiB;MAAEE,YAAY;MAAEE,gBAAgB;MAAEE,OAAO;MAAEE,WAAW;MAAEE,MAAM;MAC/EE,GAAG;MAAEE,QAAQ;MAAEE,mBAAmB;MAAEE,mBAAmB;MAAEE,WAAW;MAAEE,cAAc;MACpFE,qBAAqB;MAAEE,qBAAqB;MAAEE,aAAa;MAAEE,gBAAgB;MAAEE,MAAM;MACrFE,oBAAoB;MAAEE,eAAe;MAAEE,WAAW;MAAEE,aAAa;MAAEE,UAAU;MAC7EE,oBAAoB;MAAEE,MAAM;MAAEE,eAAe;MAAEE,uBAAuB;MAAEE,sBAAsB;MAC9FE,WAAW;MAAEE,gBAAgB;MAAEE,cAAc;MAAEE,aAAa;MAAEE,gBAAgB;MAAEE,QAAQ;MACxFE,QAAQ;MAAEE,UAAU;MAAEE,WAAW;MAAEE,KAAK;MAAEE,kBAAkB;MAAEE,gBAAgB;MAAEE,eAAe;MAC/FE,EAAE;MAAEE,GAAG;MAAEE;IACb,CAAC;IAED,IAAIK,EAAE,EAAE;MACJ9F,eAAe,CAAC0G,cAAc,CAACZ,EAAE,EAAEW,QAAQ,CAAC,CAACE,IAAI,CAAC,MAAM;QACpDd,OAAO,CAACe,IAAI,CAAC,YAAY,CAAC;MAC9B,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,MAAM;MACH9G,eAAe,CAACiH,cAAc,CAACR,QAAQ,CAAC,CAACE,IAAI,CAAC,MAAM;QAChDd,OAAO,CAACe,IAAI,CAAC,YAAY,CAAC;MAC9B,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EACJ,CAAC;EAEDlH,SAAS,CAAC,MAAM;IACZ,IAAIkG,EAAE,EAAE;MACJ9F,eAAe,CAACkH,eAAe,CAACpB,EAAE,CAAC,CAACa,IAAI,CAACQ,QAAQ,IAAI;QACjD,MAAMV,QAAQ,GAAGU,QAAQ,CAACC,IAAI;QAC9B9G,oBAAoB,CAACmG,QAAQ,CAACpG,iBAAiB,CAAC;QAChDK,mBAAmB,CAAC+F,QAAQ,CAAChG,gBAAgB,CAAC;QAC9CD,eAAe,CAACiG,QAAQ,CAAClG,YAAY,CAAC;QACtCK,UAAU,CAAC6F,QAAQ,CAAC9F,OAAO,CAAC;QAC5BG,cAAc,CAAC2F,QAAQ,CAAC5F,WAAW,CAAC;QACpCG,SAAS,CAACyF,QAAQ,CAAC1F,MAAM,CAAC;QAC1BG,MAAM,CAACuF,QAAQ,CAACxF,GAAG,CAAC;QACpBG,WAAW,CAACqF,QAAQ,CAACtF,QAAQ,CAAC;QAC9BG,sBAAsB,CAACmF,QAAQ,CAACpF,mBAAmB,CAAC;QACpDG,sBAAsB,CAACiF,QAAQ,CAAClF,mBAAmB,CAAC;QACpDG,cAAc,CAAC+E,QAAQ,CAAChF,WAAW,CAAC;QACpCG,iBAAiB,CAAC6E,QAAQ,CAAC9E,cAAc,CAAC;QAC1CG,wBAAwB,CAAC2E,QAAQ,CAAC5E,qBAAqB,CAAC;QACxDG,wBAAwB,CAACyE,QAAQ,CAAC1E,qBAAqB,CAAC;QACxDG,gBAAgB,CAACuE,QAAQ,CAACxE,aAAa,CAAC;QACxCG,mBAAmB,CAACqE,QAAQ,CAACtE,gBAAgB,CAAC;QAC9CG,SAAS,CAACmE,QAAQ,CAACpE,MAAM,CAAC;QAC1BG,uBAAuB,CAACiE,QAAQ,CAAClE,oBAAoB,CAAC;QACtDG,kBAAkB,CAAC+D,QAAQ,CAAChE,eAAe,CAAC;QAC5CG,cAAc,CAAC6D,QAAQ,CAAC9D,WAAW,CAAC;QACpCG,gBAAgB,CAAC2D,QAAQ,CAAC5D,aAAa,CAAC;QACxCG,aAAa,CAACyD,QAAQ,CAAC1D,UAAU,CAAC;QAClCG,uBAAuB,CAACuD,QAAQ,CAACxD,oBAAoB,CAAC;QACtDG,SAAS,CAACqD,QAAQ,CAACtD,MAAM,CAAC;QAC1BG,kBAAkB,CAACmD,QAAQ,CAACpD,eAAe,CAAC;QAC5CG,0BAA0B,CAACiD,QAAQ,CAAClD,uBAAuB,CAAC;QAC5DG,yBAAyB,CAAC+C,QAAQ,CAAChD,sBAAsB,CAAC;QAC1DG,cAAc,CAAC6C,QAAQ,CAAC9C,WAAW,CAAC;QACpCG,mBAAmB,CAAC2C,QAAQ,CAAC5C,gBAAgB,CAAC;QAC9CG,iBAAiB,CAACyC,QAAQ,CAAC1C,cAAc,CAAC;QAC1CG,gBAAgB,CAACuC,QAAQ,CAACxC,aAAa,CAAC;QACxCG,mBAAmB,CAACqC,QAAQ,CAACtC,gBAAgB,CAAC;QAC9CG,WAAW,CAACmC,QAAQ,CAACpC,QAAQ,CAAC;QAC9BG,WAAW,CAACiC,QAAQ,CAAClC,QAAQ,CAAC;QAC9BG,aAAa,CAAC+B,QAAQ,CAAChC,UAAU,CAAC;QAClCG,cAAc,CAAC6B,QAAQ,CAAC9B,WAAW,CAAC;QACpCG,QAAQ,CAAC2B,QAAQ,CAAC5B,KAAK,CAAC;QACxBG,qBAAqB,CAACyB,QAAQ,CAAC1B,kBAAkB,CAAC;QAClDG,mBAAmB,CAACuB,QAAQ,CAACxB,gBAAgB,CAAC;QAC9CG,kBAAkB,CAACqB,QAAQ,CAACtB,eAAe,CAAC;QAC5CG,KAAK,CAACmB,QAAQ,CAACpB,EAAE,CAAC;QAClBG,MAAM,CAACiB,QAAQ,CAAClB,GAAG,CAAC;QACpBG,MAAM,CAACe,QAAQ,CAAChB,GAAG,CAAC;MACxB,CAAC,CAAC,CAACoB,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAChB,EAAE,CAAC,CAAC;EAER,MAAMuB,KAAK,GAAGA,CAAA,KAAM;IAChB,OAAOvB,EAAE,gBAAG5F,OAAA;MAAIoH,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAGzH,OAAA;MAAIoH,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChH,CAAC;EAED,oBACIzH,OAAA;IAAAqH,QAAA,gBACIrH,OAAA;MAAAsH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAAAzH,OAAA;MAAAsH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACZzH,OAAA;MAAKoH,SAAS,EAAC,WAAW;MAAAC,QAAA,eACtBrH,OAAA;QAAKoH,SAAS,EAAC,KAAK;QAAAC,QAAA,eAChBrH,OAAA;UAAKoH,SAAS,EAAC,uCAAuC;UAAAC,QAAA,GACjDF,KAAK,CAAC,CAAC,eACRnH,OAAA;YAAKoH,SAAS,EAAC,WAAW;YAAAC,QAAA,eACtBrH,OAAA;cAAAqH,QAAA,gBACIrH,OAAA;gBAAAqH,QAAA,EAAI;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1BzH,OAAA;gBAAKoH,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC5BrH,OAAA;kBAAOoH,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAW;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACjDzH,OAAA;kBACI0H,IAAI,EAAC,MAAM;kBACXC,WAAW,EAAC,kBAAkB;kBAC9BC,IAAI,EAAC,mBAAmB;kBACxBR,SAAS,EAAC,cAAc;kBACxBS,KAAK,EAAE1H,iBAAkB;kBACzB2H,QAAQ,EAAGzB,CAAC,IAAKjG,oBAAoB,CAACiG,CAAC,CAAC0B,MAAM,CAACF,KAAK;gBAAE;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD,CAAC,EACDhC,MAAM,CAACtF,iBAAiB,iBAAIH,OAAA;kBAAKoH,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAE5B,MAAM,CAACtF;gBAAiB;kBAAAmH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzF,CAAC,eAONzH,OAAA;gBAAQoH,SAAS,EAAC,iBAAiB;gBAACY,OAAO,EAAE5B,oBAAqB;gBAAAiB,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClFzH,OAAA,CAACL,IAAI;gBAACsI,EAAE,EAAC,YAAY;gBAACb,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvH,EAAA,CA/MID,oBAAoB;EAAA,QAiDNL,UAAU,EACXC,SAAS;AAAA;AAAAqI,EAAA,GAlDtBjI,oBAAoB;AAiN1B,eAAeA,oBAAoB;AAAC,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}